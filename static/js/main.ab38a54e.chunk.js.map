{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","children","className","React","createElement","CardContent","_ref2","Button","_ref3","onClick","questions","question","options","answer","QuizApp","currentQuestion","setCurrentQuestion","useState","selectedAnswer","setSelectedAnswer","feedback","setFeedback","loadNewQuestion","randomIndex","Math","floor","random","length","useEffect","Fragment","map","option","index","key","handleAnswer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"uLAGA,SAASA,EAAIC,GAA2B,IAA1B,SAAEC,EAAQ,UAAEC,GAAWF,EACnC,OACEG,IAAAC,cAAA,OAAKF,UAAW,4CAA4CA,GACzDD,GAMP,SAASI,EAAWC,GAAgB,IAAf,SAAEL,GAAUK,EAC/B,OAAOH,IAAAC,cAAA,OAAKF,UAAU,OAAOD,GAI/B,SAASM,EAAMC,GAAoC,IAAnC,SAAEP,EAAQ,QAAEQ,EAAO,UAAEP,GAAWM,EAC9C,OACEL,IAAAC,cAAA,UACEK,QAASA,EACTP,UAAW,yEAAyEA,GAEnFD,GAKP,MAAMS,EAAY,CAChB,CACEC,SAAU,wDACVC,QAAS,CACP,mDACA,qDACA,+CACA,oDAEFC,OAAQ,GAEV,CACEF,SAAU,4DACVC,QAAS,CACP,0BACA,eACA,2BACA,qBAEFC,OAAQ,GAEV,CACEF,SAAU,4CACVC,QAAS,CACP,0CACA,iCACA,kBACA,6BAEFC,OAAQ,IAIG,SAASC,IACtB,MAAOC,EAAiBC,GAAsBC,mBAAS,OAChDC,EAAgBC,GAAqBF,mBAAS,OAC9CG,EAAUC,GAAeJ,mBAAS,IAMzC,SAASK,IACP,MAAMC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWhB,EAAUiB,QACzDX,EAAmBN,EAAUa,IAC7BJ,EAAkB,MAClBE,EAAY,IAYd,OApBAO,oBAAU,KACRN,KACC,IAmBDnB,IAAAC,cAAA,OAAKF,UAAU,0EACbC,IAAAC,cAACL,EAAI,CAACG,UAAU,mCACdC,IAAAC,cAACC,EAAW,KACTU,GACCZ,IAAAC,cAAAD,IAAA0B,SAAA,KACE1B,IAAAC,cAAA,MAAIF,UAAU,yBAAyBa,EAAgBJ,UACvDR,IAAAC,cAAA,OAAKF,UAAU,4BACZa,EAAgBH,QAAQkB,IAAI,CAACC,EAAQC,IACpC7B,IAAAC,cAACG,EAAM,CACL0B,IAAKD,EACL9B,UAAW,WACTgB,IAAmBc,EACfA,IAAUjB,EAAgBF,OACxB,eACA,aACF,IAENJ,QAASA,IA3B3B,SAAsBuB,GACpBb,EAAkBa,GACdA,IAAUjB,EAAgBF,OAC5BQ,EAAY,mBAEZA,EAAY,gCAsBiBa,CAAaF,IAE3BD,KAIP5B,IAAAC,cAAA,KAAGF,UAAU,kBAAkBkB,GAC/BjB,IAAAC,cAACG,EAAM,CAACL,UAAU,qCAAqCO,QAASa,GAAiB,qBCnGhFa,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKtC,IAAkD,IAAjD,OAAEuC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS3C,EACpEuC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7C,IAAAC,cAACD,IAAM8C,WAAU,KACf9C,IAAAC,cAAC8C,EAAG,QAORf,K","file":"static/js/main.ab38a54e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n// Custom Card component\nfunction Card({ children, className }) {\n  return (\n    <div className={`border rounded-lg shadow-md p-4 bg-white ${className}`}>\n      {children}\n    </div>\n  );\n}\n\n// Custom CardContent component\nfunction CardContent({ children }) {\n  return <div className=\"p-2\">{children}</div>;\n}\n\n// Custom Button component\nfunction Button({ children, onClick, className }) {\n  return (\n    <button\n      onClick={onClick}\n      className={`px-4 py-2 rounded bg-blue-500 text-white hover:bg-blue-600 transition ${className}`}\n    >\n      {children}\n    </button>\n  );\n}\n\nconst questions = [\n  {\n    question: \"What are the three defining features of a profession?\",\n    options: [\n      \"Body of people, Self governing, Entry controlled\",\n      \"High salary, Degree required, Government regulated\",\n      \"Any job, No formal qualification, Open entry\",\n      \"Work-life balance, High prestige, Public service\"\n    ],\n    answer: 0\n  },\n  {\n    question: \"What is the last step for a bill to become law in the UK?\",\n    options: [\n      \"House of Lords Approval\",\n      \"Royal Assent\",\n      \"Third Reading in Commons\",\n      \"Public Referendum\"\n    ],\n    answer: 1\n  },\n  {\n    question: \"Which UK body supervises data protection?\",\n    options: [\n      \"Information Commissioner's Office (ICO)\",\n      \"British Computer Society (BCS)\",\n      \"Science Council\",\n      \"European Court of Justice\"\n    ],\n    answer: 0\n  }\n];\n\nexport default function QuizApp() {\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [feedback, setFeedback] = useState(\"\");\n\n  useEffect(() => {\n    loadNewQuestion();\n  }, []);\n\n  function loadNewQuestion() {\n    const randomIndex = Math.floor(Math.random() * questions.length);\n    setCurrentQuestion(questions[randomIndex]);\n    setSelectedAnswer(null);\n    setFeedback(\"\");\n  }\n\n  function handleAnswer(index) {\n    setSelectedAnswer(index);\n    if (index === currentQuestion.answer) {\n      setFeedback(\"✅ Correct!\");\n    } else {\n      setFeedback(\"❌ Incorrect, try again!\");\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-4 bg-gray-100\">\n      <Card className=\"max-w-md w-full text-center p-4\">\n        <CardContent>\n          {currentQuestion && (\n            <>\n              <h2 className=\"text-xl font-semibold\">{currentQuestion.question}</h2>\n              <div className=\"mt-4 flex flex-col gap-2\">\n                {currentQuestion.options.map((option, index) => (\n                  <Button\n                    key={index}\n                    className={`w-full ${\n                      selectedAnswer === index\n                        ? index === currentQuestion.answer\n                          ? \"bg-green-500\"\n                          : \"bg-red-500\"\n                        : \"\"\n                    }`}\n                    onClick={() => handleAnswer(index)}\n                  >\n                    {option}\n                  </Button>\n                ))}\n              </div>\n              <p className=\"mt-4 font-bold\">{feedback}</p>\n              <Button className=\"mt-4 bg-gray-700 hover:bg-gray-800\" onClick={loadNewQuestion}>\n                Next Question\n              </Button>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}